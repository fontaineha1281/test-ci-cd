# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test CI/CD React JS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  react:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: my-app
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './my-app/package-lock.json'
    - name: Install dependencies
      run: npm ci
    - name: Test
      run: npm test
   # - name: Run Build
   #   run: npm run build --if-present
  docker:
    runs-on: self-hosted
    needs: [ react ]
    environment: secrets
    steps:
      run: sudo su
    steps:
    - uses: actions/checkout@main
    - name: Config for docker compose
      run: |
        echo "${{secrets.ENV_CONFIG}}" > ./env-config.js
        echo "${{secrets.DOCKER_COMPOSE}}" > docker-compose.yml
    - name: Build docker compose
      run: |
        sudo docker-compose build
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{secrets.DOCKER_USER}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: Push to Docker Hub
      run: |
        docker tag react fontaine1281/react:v1
        docker push fontaine1281/react:v1
    